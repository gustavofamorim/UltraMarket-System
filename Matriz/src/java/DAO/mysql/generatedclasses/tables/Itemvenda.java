/**
 * This class is generated by jOOQ
 */
package DAO.mysql.generatedclasses.tables;


import DAO.mysql.generatedclasses.Keys;
import DAO.mysql.generatedclasses.Matrizdb;
import DAO.mysql.generatedclasses.tables.records.ItemvendaRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.0"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Itemvenda extends TableImpl<ItemvendaRecord> {

	private static final long serialVersionUID = 586758793;

	/**
	 * The reference instance of <code>matrizdb.itemvenda</code>
	 */
	public static final Itemvenda ITEMVENDA = new Itemvenda();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ItemvendaRecord> getRecordType() {
		return ItemvendaRecord.class;
	}

	/**
	 * The column <code>matrizdb.itemvenda.Venda_idVenda</code>.
	 */
	public final TableField<ItemvendaRecord, Integer> VENDA_IDVENDA = createField("Venda_idVenda", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>matrizdb.itemvenda.Produto_idProduto</code>.
	 */
	public final TableField<ItemvendaRecord, Integer> PRODUTO_IDPRODUTO = createField("Produto_idProduto", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>matrizdb.itemvenda.qtd</code>.
	 */
	public final TableField<ItemvendaRecord, Integer> QTD = createField("qtd", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>matrizdb.itemvenda.total</code>.
	 */
	public final TableField<ItemvendaRecord, Double> TOTAL = createField("total", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

	/**
	 * Create a <code>matrizdb.itemvenda</code> table reference
	 */
	public Itemvenda() {
		this("itemvenda", null);
	}

	/**
	 * Create an aliased <code>matrizdb.itemvenda</code> table reference
	 */
	public Itemvenda(String alias) {
		this(alias, ITEMVENDA);
	}

	private Itemvenda(String alias, Table<ItemvendaRecord> aliased) {
		this(alias, aliased, null);
	}

	private Itemvenda(String alias, Table<ItemvendaRecord> aliased, Field<?>[] parameters) {
		super(alias, Matrizdb.MATRIZDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ItemvendaRecord> getPrimaryKey() {
		return Keys.KEY_ITEMVENDA_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ItemvendaRecord>> getKeys() {
		return Arrays.<UniqueKey<ItemvendaRecord>>asList(Keys.KEY_ITEMVENDA_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ItemvendaRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ItemvendaRecord, ?>>asList(Keys.FK_VENDA_HAS_PRODUTO_VENDA, Keys.FK_VENDA_HAS_PRODUTO_PRODUTO1);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Itemvenda as(String alias) {
		return new Itemvenda(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Itemvenda rename(String name) {
		return new Itemvenda(name, null);
	}
}
